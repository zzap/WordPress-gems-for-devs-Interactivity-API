{"version":3,"names":["useMemo","_useMemo","useCallback","_useCallback","useEffect","_useEffect","useLayoutEffect","_useLayoutEffect","effect","getScope","setScope","resetScope","getNamespace","setNamespace","resetNamespace","afterNextFrame","callback","Promise","resolve","done","clearTimeout","timeout","window","cancelAnimationFrame","raf","setTimeout","requestAnimationFrame","splitTask","scheduler","yield","bind","createFlusher","compute","notify","flush","undefined","dispose","c","x","useSignalEffect","eff","isExecuting","withScope","func","scope","ns","wrapped","constructor","name","args","gen","value","it","next","e","throw","syncAware","sync","syncAwareWrapped","useWatch","useInit","inputs","factory","createRootFragment","parent","replaceNode","concat","sibling","length","nextSibling","insert","child","root","insertBefore","__k","nodeType","parentNode","firstChild","childNodes","appendChild","removeChild","kebabToCamelCase","str","replace","toLowerCase","_match","group1","toUpperCase","logged","Set","warn","message","globalThis","SCRIPT_DEBUG","has","console","Error","add","isPlainObject","candidate","Boolean","Object","withSyncEvent"],"sources":["@wordpress/interactivity/src/utils.ts"],"sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tuseMemo as _useMemo,\n\tuseCallback as _useCallback,\n\tuseEffect as _useEffect,\n\tuseLayoutEffect as _useLayoutEffect,\n\ttype EffectCallback,\n\ttype Inputs,\n} from 'preact/hooks';\nimport { effect } from '@preact/signals';\n\n/**\n * Internal dependencies\n */\nimport { getScope, setScope, resetScope } from './scopes';\nimport { getNamespace, setNamespace, resetNamespace } from './namespaces';\n\ninterface Flusher {\n\treadonly flush: () => void;\n\treadonly dispose: () => void;\n}\n\ndeclare global {\n\tinterface Window {\n\t\tscheduler?: {\n\t\t\treadonly yield?: () => Promise< void >;\n\t\t};\n\t}\n}\n\ninterface SyncAwareFunction extends Function {\n\tsync?: boolean;\n}\n\n/**\n * Executes a callback function after the next frame is rendered.\n *\n * @param callback The callback function to be executed.\n * @return A promise that resolves after the callback function is executed.\n */\nconst afterNextFrame = ( callback: () => void ) => {\n\treturn new Promise< void >( ( resolve ) => {\n\t\tconst done = () => {\n\t\t\tclearTimeout( timeout );\n\t\t\twindow.cancelAnimationFrame( raf );\n\t\t\tsetTimeout( () => {\n\t\t\t\tcallback();\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t};\n\t\tconst timeout = setTimeout( done, 100 );\n\t\tconst raf = window.requestAnimationFrame( done );\n\t} );\n};\n\n/**\n * Returns a promise that resolves after yielding to main.\n *\n * @return Promise<void>\n */\nexport const splitTask =\n\ttypeof window.scheduler?.yield === 'function'\n\t\t? window.scheduler.yield.bind( window.scheduler )\n\t\t: () => {\n\t\t\t\treturn new Promise( ( resolve ) => {\n\t\t\t\t\tsetTimeout( resolve, 0 );\n\t\t\t\t} );\n\t\t  };\n\n/**\n * Creates a Flusher object that can be used to flush computed values and notify listeners.\n *\n * Using the mangled properties:\n * this.c: this._callback\n * this.x: this._compute\n * https://github.com/preactjs/signals/blob/main/mangle.json\n *\n * @param compute The function that computes the value to be flushed.\n * @param notify  The function that notifies listeners when the value is flushed.\n * @return The Flusher object with `flush` and `dispose` properties.\n */\nfunction createFlusher( compute: () => void, notify: () => void ): Flusher {\n\tlet flush: () => void = () => undefined;\n\tconst dispose = effect( function ( this: any ): void {\n\t\tflush = this.c.bind( this );\n\t\tthis.x = compute;\n\t\tthis.c = notify;\n\t\treturn compute();\n\t} );\n\treturn { flush, dispose } as const;\n}\n\n/**\n * Custom hook that executes a callback function whenever a signal is triggered.\n * Version of `useSignalEffect` with a `useEffect`-like execution. This hook\n * implementation comes from this PR, but we added short-cirtuiting to avoid\n * infinite loops: https://github.com/preactjs/signals/pull/290\n *\n * @param callback The callback function to be executed.\n */\nexport function useSignalEffect( callback: () => unknown ) {\n\t_useEffect( () => {\n\t\tlet eff: Flusher | null = null;\n\t\tlet isExecuting = false;\n\n\t\tconst notify = async () => {\n\t\t\tif ( eff && ! isExecuting ) {\n\t\t\t\tisExecuting = true;\n\t\t\t\tawait afterNextFrame( eff.flush );\n\t\t\t\tisExecuting = false;\n\t\t\t}\n\t\t};\n\n\t\teff = createFlusher( callback, notify );\n\t\treturn eff.dispose;\n\t}, [] );\n}\n\n/**\n * Returns the passed function wrapped with the current scope so it is\n * accessible whenever the function runs. This is primarily to make the scope\n * available inside hook callbacks.\n *\n * Asynchronous functions should use generators that yield promises instead of awaiting them.\n * See the documentation for details: https://developer.wordpress.org/block-editor/reference-guides/packages/packages-interactivity/packages-interactivity-api-reference/#the-store\n *\n * @param func The passed function.\n * @return The wrapped function.\n */\nexport function withScope<\n\tFunc extends ( ...args: any[] ) => Generator< any, any >,\n>(\n\tfunc: Func\n): (\n\t...args: Parameters< Func >\n) => ReturnType< Func > extends Generator< any, infer Return >\n\t? Promise< Return >\n\t: never;\nexport function withScope< Func extends Function >( func: Func ): Func;\nexport function withScope< Func extends SyncAwareFunction >( func: Func ): Func;\nexport function withScope( func: ( ...args: unknown[] ) => unknown ) {\n\tconst scope = getScope();\n\tconst ns = getNamespace();\n\n\tlet wrapped: Function;\n\tif ( func?.constructor?.name === 'GeneratorFunction' ) {\n\t\twrapped = async ( ...args: Parameters< typeof func > ) => {\n\t\t\tconst gen = func( ...args ) as Generator;\n\t\t\tlet value: any;\n\t\t\tlet it: any;\n\t\t\twhile ( true ) {\n\t\t\t\tsetNamespace( ns );\n\t\t\t\tsetScope( scope );\n\t\t\t\ttry {\n\t\t\t\t\tit = gen.next( value );\n\t\t\t\t} finally {\n\t\t\t\t\tresetScope();\n\t\t\t\t\tresetNamespace();\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvalue = await it.value;\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\tsetNamespace( ns );\n\t\t\t\t\tsetScope( scope );\n\t\t\t\t\tgen.throw( e );\n\t\t\t\t} finally {\n\t\t\t\t\tresetScope();\n\t\t\t\t\tresetNamespace();\n\t\t\t\t}\n\n\t\t\t\tif ( it.done ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\twrapped = ( ...args: Parameters< typeof func > ) => {\n\t\t\tsetNamespace( ns );\n\t\t\tsetScope( scope );\n\t\t\ttry {\n\t\t\t\treturn func( ...args );\n\t\t\t} finally {\n\t\t\t\tresetNamespace();\n\t\t\t\tresetScope();\n\t\t\t}\n\t\t};\n\t}\n\n\t// If function was annotated via `withSyncEvent()`, maintain the annotation.\n\tconst syncAware = func as SyncAwareFunction;\n\tif ( syncAware.sync ) {\n\t\tconst syncAwareWrapped = wrapped as SyncAwareFunction;\n\t\tsyncAwareWrapped.sync = true;\n\t\treturn syncAwareWrapped;\n\t}\n\n\treturn wrapped;\n}\n\n/**\n * Accepts a function that contains imperative code which runs whenever any of\n * the accessed _reactive_ properties (e.g., values from the global state or the\n * context) is modified.\n *\n * This hook makes the element's scope available so functions like\n * `getElement()` and `getContext()` can be used inside the passed callback.\n *\n * @param callback The hook callback.\n */\nexport function useWatch( callback: () => unknown ) {\n\tuseSignalEffect( withScope( callback ) );\n}\n\n/**\n * Accepts a function that contains imperative code which runs only after the\n * element's first render, mainly useful for initialization logic.\n *\n * This hook makes the element's scope available so functions like\n * `getElement()` and `getContext()` can be used inside the passed callback.\n *\n * @param callback The hook callback.\n */\nexport function useInit( callback: EffectCallback ) {\n\t_useEffect( withScope( callback ), [] );\n}\n\n/**\n * Accepts a function that contains imperative, possibly effectful code. The\n * effects run after browser paint, without blocking it.\n *\n * This hook is equivalent to Preact's `useEffect` and makes the element's scope\n * available so functions like `getElement()` and `getContext()` can be used\n * inside the passed callback.\n *\n * @param callback Imperative function that can return a cleanup\n *                 function.\n * @param inputs   If present, effect will only activate if the\n *                 values in the list change (using `===`).\n */\nexport function useEffect( callback: EffectCallback, inputs: Inputs ) {\n\t_useEffect( withScope( callback ), inputs );\n}\n\n/**\n * Accepts a function that contains imperative, possibly effectful code. Use\n * this to read layout from the DOM and synchronously re-render.\n *\n * This hook is equivalent to Preact's `useLayoutEffect` and makes the element's\n * scope available so functions like `getElement()` and `getContext()` can be\n * used inside the passed callback.\n *\n * @param callback Imperative function that can return a cleanup\n *                 function.\n * @param inputs   If present, effect will only activate if the\n *                 values in the list change (using `===`).\n */\nexport function useLayoutEffect( callback: EffectCallback, inputs: Inputs ) {\n\t_useLayoutEffect( withScope( callback ), inputs );\n}\n\n/**\n * Returns a memoized version of the callback that only changes if one of the\n * inputs has changed (using `===`).\n *\n * This hook is equivalent to Preact's `useCallback` and makes the element's\n * scope available so functions like `getElement()` and `getContext()` can be\n * used inside the passed callback.\n *\n * @param callback Callback function.\n * @param inputs   If present, the callback will only be updated if the\n *                 values in the list change (using `===`).\n *\n * @return The callback function.\n */\nexport function useCallback< T extends Function >(\n\tcallback: T,\n\tinputs: Inputs\n): T {\n\treturn _useCallback< T >( withScope( callback ), inputs );\n}\n\n/**\n * Pass a factory function and an array of inputs. `useMemo` will only recompute\n * the memoized value when one of the inputs has changed.\n *\n * This hook is equivalent to Preact's `useMemo` and makes the element's scope\n * available so functions like `getElement()` and `getContext()` can be used\n * inside the passed factory function.\n *\n * @param factory Factory function that returns that value for memoization.\n * @param inputs  If present, the factory will only be run to recompute if\n *                the values in the list change (using `===`).\n *\n * @return The memoized value.\n */\nexport function useMemo< T >( factory: () => T, inputs: Inputs ): T {\n\treturn _useMemo( withScope( factory ), inputs );\n}\n\n/**\n * Creates a root fragment by replacing a node or an array of nodes in a parent element.\n * For wrapperless hydration.\n * See https://gist.github.com/developit/f4c67a2ede71dc2fab7f357f39cff28c\n *\n * @param parent      The parent element where the nodes will be replaced.\n * @param replaceNode The node or array of nodes to replace in the parent element.\n * @return The created root fragment.\n */\nexport const createRootFragment = (\n\tparent: Element,\n\treplaceNode: Node | Node[]\n) => {\n\treplaceNode = ( [] as Node[] ).concat( replaceNode );\n\tconst sibling = replaceNode[ replaceNode.length - 1 ].nextSibling;\n\tfunction insert( child: any, root: any ) {\n\t\tparent.insertBefore( child, root || sibling );\n\t}\n\treturn ( ( parent as any ).__k = {\n\t\tnodeType: 1,\n\t\tparentNode: parent,\n\t\tfirstChild: replaceNode[ 0 ],\n\t\tchildNodes: replaceNode,\n\t\tinsertBefore: insert,\n\t\tappendChild: insert,\n\t\tremoveChild( c: Node ) {\n\t\t\tparent.removeChild( c );\n\t\t},\n\t} );\n};\n\n/**\n * Transforms a kebab-case string to camelCase.\n *\n * @param str The kebab-case string to transform to camelCase.\n * @return The transformed camelCase string.\n */\nexport function kebabToCamelCase( str: string ): string {\n\treturn str\n\t\t.replace( /^-+|-+$/g, '' )\n\t\t.toLowerCase()\n\t\t.replace( /-([a-z])/g, function ( _match, group1: string ) {\n\t\t\treturn group1.toUpperCase();\n\t\t} );\n}\n\nconst logged: Set< string > = new Set();\n\n/**\n * Shows a warning with `message` if environment is not `production`.\n *\n * Based on the `@wordpress/warning` package.\n *\n * @param message Message to show in the warning.\n */\nexport const warn = ( message: string ): void => {\n\tif ( globalThis.SCRIPT_DEBUG ) {\n\t\tif ( logged.has( message ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn( message );\n\n\t\t// Throwing an error and catching it immediately to improve debugging\n\t\t// A consumer can use 'pause on caught exceptions'\n\t\ttry {\n\t\t\tthrow Error( message );\n\t\t} catch ( e ) {\n\t\t\t// Do nothing.\n\t\t}\n\t\tlogged.add( message );\n\t}\n};\n\n/**\n * Checks if the passed `candidate` is a plain object with just the `Object`\n * prototype.\n *\n * @param candidate The item to check.\n * @return Whether `candidate` is a plain object.\n */\nexport const isPlainObject = (\n\tcandidate: unknown\n): candidate is Record< string, unknown > =>\n\tBoolean(\n\t\tcandidate &&\n\t\t\ttypeof candidate === 'object' &&\n\t\t\tcandidate.constructor === Object\n\t);\n\n/**\n * Indicates that the passed `callback` requires synchronous access to the event object.\n *\n * @param callback The event callback.\n * @return Altered event callback.\n */\nexport function withSyncEvent( callback: Function ): SyncAwareFunction {\n\tconst syncAware = callback as SyncAwareFunction;\n\tsyncAware.sync = true;\n\treturn syncAware;\n}\n"],"mappings":"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","ignoreList":[]}