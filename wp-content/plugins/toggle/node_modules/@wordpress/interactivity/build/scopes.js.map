{"version":3,"names":["_namespaces","require","scopeStack","getScope","slice","exports","setScope","scope","push","resetScope","pop","immutableMap","WeakMap","immutableError","Error","immutableHandlers","get","target","key","receiver","value","Reflect","deepImmutable","set","deleteProperty","has","Proxy","getContext","namespace","globalThis","SCRIPT_DEBUG","context","getNamespace","getElement","ref","attributes","Object","freeze","current","getServerContext","serverContext"],"sources":["@wordpress/interactivity/src/scopes.ts"],"sourcesContent":["/**\n * External dependencies\n */\nimport type { h as createElement, RefObject } from 'preact';\n\n/**\n * Internal dependencies\n */\nimport { getNamespace } from './namespaces';\nimport type { Evaluate } from './hooks';\n\nexport interface Scope {\n\tevaluate: Evaluate;\n\tcontext: object;\n\tserverContext: object;\n\tref: RefObject< HTMLElement >;\n\tattributes: createElement.JSX.HTMLAttributes;\n}\n\n// Store stacks for the current scope and the default namespaces and export APIs\n// to interact with them.\nconst scopeStack: Scope[] = [];\n\nexport const getScope = () => scopeStack.slice( -1 )[ 0 ];\n\nexport const setScope = ( scope: Scope ) => {\n\tscopeStack.push( scope );\n};\nexport const resetScope = () => {\n\tscopeStack.pop();\n};\n\n// Wrap the element props to prevent modifications.\nconst immutableMap = new WeakMap();\nconst immutableError = () => {\n\tthrow new Error(\n\t\t'Please use `data-wp-bind` to modify the attributes of an element.'\n\t);\n};\nconst immutableHandlers: ProxyHandler< object > = {\n\tget( target, key, receiver ) {\n\t\tconst value = Reflect.get( target, key, receiver );\n\t\treturn !! value && typeof value === 'object'\n\t\t\t? deepImmutable( value )\n\t\t\t: value;\n\t},\n\tset: immutableError,\n\tdeleteProperty: immutableError,\n};\nconst deepImmutable = < T extends object = {} >( target: T ): T => {\n\tif ( ! immutableMap.has( target ) ) {\n\t\timmutableMap.set( target, new Proxy( target, immutableHandlers ) );\n\t}\n\treturn immutableMap.get( target );\n};\n\n/**\n * Retrieves the context inherited by the element evaluating a function from the\n * store. The returned value depends on the element and the namespace where the\n * function calling `getContext()` exists.\n *\n * @param namespace Store namespace. By default, the namespace where the calling\n *                  function exists is used.\n * @return The context content.\n */\nexport const getContext = < T extends object >( namespace?: string ): T => {\n\tconst scope = getScope();\n\tif ( globalThis.SCRIPT_DEBUG ) {\n\t\tif ( ! scope ) {\n\t\t\tthrow Error(\n\t\t\t\t'Cannot call `getContext()` when there is no scope. If you are using an async function, please consider using a generator instead. If you are using some sort of async callbacks, like `setTimeout`, please wrap the callback with `withScope(callback)`.'\n\t\t\t);\n\t\t}\n\t}\n\treturn scope.context[ namespace || getNamespace() ];\n};\n\n/**\n * Retrieves a representation of the element where a function from the store\n * is being evaluated. Such representation is read-only, and contains a\n * reference to the DOM element, its props and a local reactive state.\n *\n * @return Element representation.\n */\nexport const getElement = () => {\n\tconst scope = getScope();\n\tif ( globalThis.SCRIPT_DEBUG ) {\n\t\tif ( ! scope ) {\n\t\t\tthrow Error(\n\t\t\t\t'Cannot call `getElement()` when there is no scope. If you are using an async function, please consider using a generator instead. If you are using some sort of async callbacks, like `setTimeout`, please wrap the callback with `withScope(callback)`.'\n\t\t\t);\n\t\t}\n\t}\n\tconst { ref, attributes } = scope;\n\treturn Object.freeze( {\n\t\tref: ref.current,\n\t\tattributes: deepImmutable( attributes ),\n\t} );\n};\n\n/**\n * Retrieves the part of the inherited context defined and updated from the\n * server.\n *\n * The object returned is read-only, and includes the context defined in PHP\n * with `wp_interactivity_data_wp_context()`, including the corresponding\n * inherited properties. When `actions.navigate()` is called, this object is\n * updated to reflect the changes in the new visited page, without affecting the\n * context returned by `getContext()`. Directives can subscribe to those changes\n * to update the context if needed.\n *\n * @example\n * ```js\n *  store('...', {\n *    callbacks: {\n *      updateServerContext() {\n *        const context = getContext();\n *        const serverContext = getServerContext();\n *        // Override some property with the new value that came from the server.\n *        context.overridableProp = serverContext.overridableProp;\n *      },\n *    },\n *  });\n * ```\n *\n * @param namespace Store namespace. By default, the namespace where the calling\n *                  function exists is used.\n * @return The server context content.\n */\nexport const getServerContext = < T extends object >(\n\tnamespace?: string\n): T => {\n\tconst scope = getScope();\n\tif ( globalThis.SCRIPT_DEBUG ) {\n\t\tif ( ! scope ) {\n\t\t\tthrow Error(\n\t\t\t\t'Cannot call `getServerContext()` when there is no scope. If you are using an async function, please consider using a generator instead. If you are using some sort of async callbacks, like `setTimeout`, please wrap the callback with `withScope(callback)`.'\n\t\t\t);\n\t\t}\n\t}\n\treturn scope.serverContext[ namespace || getNamespace() ];\n};\n"],"mappings":"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","ignoreList":[]}