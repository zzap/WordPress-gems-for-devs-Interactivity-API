{"version":3,"names":["hydrate","toVdom","hydratedIslands","createRootFragment","splitTask","directivePrefix","regionRootFragments","WeakMap","getRegionRootFragment","region","parentElement","Error","has","set","get","initialVdom","init","nodes","document","querySelectorAll","Promise","resolve","setTimeout","node","fragment","vdom"],"sources":["@wordpress/interactivity/src/init.ts"],"sourcesContent":["/**\n * External dependencies\n */\nimport { hydrate, type ContainerNode, type ComponentChild } from 'preact';\n/**\n * Internal dependencies\n */\nimport { toVdom, hydratedIslands } from './vdom';\nimport { createRootFragment, splitTask } from './utils';\nimport { directivePrefix } from './constants';\n\n// Keep the same root fragment for each interactive region node.\nconst regionRootFragments = new WeakMap();\nexport const getRegionRootFragment = ( region: Element ): ContainerNode => {\n\tif ( ! region.parentElement ) {\n\t\tthrow Error( 'The passed region should be an element with a parent.' );\n\t}\n\tif ( ! regionRootFragments.has( region ) ) {\n\t\tregionRootFragments.set(\n\t\t\tregion,\n\t\t\tcreateRootFragment( region.parentElement, region )\n\t\t);\n\t}\n\treturn regionRootFragments.get( region );\n};\n\n// Initial vDOM regions associated with its DOM element.\nexport const initialVdom = new WeakMap< Element, ComponentChild[] >();\n\n// Initialize the router with the initial DOM.\nexport const init = async () => {\n\tconst nodes = document.querySelectorAll(\n\t\t`[data-${ directivePrefix }-interactive]`\n\t);\n\n\t/*\n\t * This `await` with setTimeout is required to apparently ensure that the interactive blocks have their stores\n\t * fully initialized prior to hydrating the blocks. If this is not present, then an error occurs, for example:\n\t * > view.js:46 Uncaught (in promise) ReferenceError: Cannot access 'state' before initialization\n\t * This occurs when splitTask() is implemented with scheduler.yield() as opposed to setTimeout(), as with the former\n\t * split tasks are added to the front of the task queue whereas with the latter they are added to the end of the queue.\n\t */\n\tawait new Promise( ( resolve ) => {\n\t\tsetTimeout( resolve, 0 );\n\t} );\n\n\tfor ( const node of nodes ) {\n\t\tif ( ! hydratedIslands.has( node ) ) {\n\t\t\tawait splitTask();\n\t\t\tconst fragment = getRegionRootFragment( node );\n\t\t\tconst vdom = toVdom( node );\n\t\t\tinitialVdom.set( node, vdom );\n\t\t\tawait splitTask();\n\t\t\thydrate( vdom, fragment );\n\t\t}\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAO,QAAiD,QAAQ;AACzE;AACA;AACA;AACA,SAASC,MAAM,EAAEC,eAAe,QAAQ,QAAQ;AAChD,SAASC,kBAAkB,EAAEC,SAAS,QAAQ,SAAS;AACvD,SAASC,eAAe,QAAQ,aAAa;;AAE7C;AACA,MAAMC,mBAAmB,GAAG,IAAIC,OAAO,CAAC,CAAC;AACzC,OAAO,MAAMC,qBAAqB,GAAKC,MAAe,IAAqB;EAC1E,IAAK,CAAEA,MAAM,CAACC,aAAa,EAAG;IAC7B,MAAMC,KAAK,CAAE,uDAAwD,CAAC;EACvE;EACA,IAAK,CAAEL,mBAAmB,CAACM,GAAG,CAAEH,MAAO,CAAC,EAAG;IAC1CH,mBAAmB,CAACO,GAAG,CACtBJ,MAAM,EACNN,kBAAkB,CAAEM,MAAM,CAACC,aAAa,EAAED,MAAO,CAClD,CAAC;EACF;EACA,OAAOH,mBAAmB,CAACQ,GAAG,CAAEL,MAAO,CAAC;AACzC,CAAC;;AAED;AACA,OAAO,MAAMM,WAAW,GAAG,IAAIR,OAAO,CAA8B,CAAC;;AAErE;AACA,OAAO,MAAMS,IAAI,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,gBAAgB,CACtC,SAAUd,eAAe,eAC1B,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAM,IAAIe,OAAO,CAAIC,OAAO,IAAM;IACjCC,UAAU,CAAED,OAAO,EAAE,CAAE,CAAC;EACzB,CAAE,CAAC;EAEH,KAAM,MAAME,IAAI,IAAIN,KAAK,EAAG;IAC3B,IAAK,CAAEf,eAAe,CAACU,GAAG,CAAEW,IAAK,CAAC,EAAG;MACpC,MAAMnB,SAAS,CAAC,CAAC;MACjB,MAAMoB,QAAQ,GAAGhB,qBAAqB,CAAEe,IAAK,CAAC;MAC9C,MAAME,IAAI,GAAGxB,MAAM,CAAEsB,IAAK,CAAC;MAC3BR,WAAW,CAACF,GAAG,CAAEU,IAAI,EAAEE,IAAK,CAAC;MAC7B,MAAMrB,SAAS,CAAC,CAAC;MACjBJ,OAAO,CAAEyB,IAAI,EAAED,QAAS,CAAC;IAC1B;EACD;AACD,CAAC","ignoreList":[]}