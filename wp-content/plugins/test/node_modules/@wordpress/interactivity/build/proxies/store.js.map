{"version":3,"names":["_registry","require","_namespaces","_utils","storeRoots","WeakSet","storeHandlers","get","target","key","receiver","result","Reflect","ns","getNamespaceFromProxy","has","obj","set","proxifyStore","setNamespace","scoped","withScope","resetNamespace","isPlainObject","shouldProxy","namespace","isRoot","proxy","createProxy","add","exports"],"sources":["@wordpress/interactivity/src/proxies/store.ts"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { createProxy, getNamespaceFromProxy, shouldProxy } from './registry';\n/**\n * External dependencies\n */\nimport { setNamespace, resetNamespace } from '../namespaces';\nimport { withScope, isPlainObject } from '../utils';\n\n/**\n * Identifies the store proxies handling the root objects of each store.\n */\nconst storeRoots = new WeakSet();\n\n/**\n * Handlers for store proxies.\n */\nconst storeHandlers: ProxyHandler< object > = {\n\tget: ( target: any, key: string | symbol, receiver: any ) => {\n\t\tconst result = Reflect.get( target, key );\n\t\tconst ns = getNamespaceFromProxy( receiver );\n\n\t\t/*\n\t\t * Check if the proxy is the store root and no key with that name exist. In\n\t\t * that case, return an empty object for the requested key.\n\t\t */\n\t\tif ( typeof result === 'undefined' && storeRoots.has( receiver ) ) {\n\t\t\tconst obj = {};\n\t\t\tReflect.set( target, key, obj );\n\t\t\treturn proxifyStore( ns, obj, false );\n\t\t}\n\n\t\t/*\n\t\t * Check if the property is a function. If it is, add the store\n\t\t * namespace to the stack and wrap the function with the current scope.\n\t\t * The `withScope` util handles both synchronous functions and generator\n\t\t * functions.\n\t\t */\n\t\tif ( typeof result === 'function' ) {\n\t\t\tsetNamespace( ns );\n\t\t\tconst scoped = withScope( result );\n\t\t\tresetNamespace();\n\t\t\treturn scoped;\n\t\t}\n\n\t\t// Check if the property is an object. If it is, proxyify it.\n\t\tif ( isPlainObject( result ) && shouldProxy( result ) ) {\n\t\t\treturn proxifyStore( ns, result, false );\n\t\t}\n\n\t\treturn result;\n\t},\n};\n\n/**\n * Returns the proxy associated with the given store object, creating it if it\n * does not exist.\n *\n * @param namespace The namespace that will be associated to this proxy.\n * @param obj       The object to proxify.\n *\n * @param isRoot    Whether the passed object is the store root object.\n * @throws Error if the object cannot be proxified. Use {@link shouldProxy} to\n *         check if a proxy can be created for a specific object.\n *\n * @return The associated proxy.\n */\nexport const proxifyStore = < T extends object >(\n\tnamespace: string,\n\tobj: T,\n\tisRoot = true\n): T => {\n\tconst proxy = createProxy( namespace, obj, storeHandlers );\n\tif ( proxy && isRoot ) {\n\t\tstoreRoots.add( proxy );\n\t}\n\treturn proxy as T;\n};\n"],"mappings":";;;;;;AAGA,IAAAA,SAAA,GAAAC,OAAA;AAIA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AARA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA,MAAMG,UAAU,GAAG,IAAIC,OAAO,CAAC,CAAC;;AAEhC;AACA;AACA;AACA,MAAMC,aAAqC,GAAG;EAC7CC,GAAG,EAAEA,CAAEC,MAAW,EAAEC,GAAoB,EAAEC,QAAa,KAAM;IAC5D,MAAMC,MAAM,GAAGC,OAAO,CAACL,GAAG,CAAEC,MAAM,EAAEC,GAAI,CAAC;IACzC,MAAMI,EAAE,GAAG,IAAAC,+BAAqB,EAAEJ,QAAS,CAAC;;IAE5C;AACF;AACA;AACA;IACE,IAAK,OAAOC,MAAM,KAAK,WAAW,IAAIP,UAAU,CAACW,GAAG,CAAEL,QAAS,CAAC,EAAG;MAClE,MAAMM,GAAG,GAAG,CAAC,CAAC;MACdJ,OAAO,CAACK,GAAG,CAAET,MAAM,EAAEC,GAAG,EAAEO,GAAI,CAAC;MAC/B,OAAOE,YAAY,CAAEL,EAAE,EAAEG,GAAG,EAAE,KAAM,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;AACA;IACE,IAAK,OAAOL,MAAM,KAAK,UAAU,EAAG;MACnC,IAAAQ,wBAAY,EAAEN,EAAG,CAAC;MAClB,MAAMO,MAAM,GAAG,IAAAC,gBAAS,EAAEV,MAAO,CAAC;MAClC,IAAAW,0BAAc,EAAC,CAAC;MAChB,OAAOF,MAAM;IACd;;IAEA;IACA,IAAK,IAAAG,oBAAa,EAAEZ,MAAO,CAAC,IAAI,IAAAa,qBAAW,EAAEb,MAAO,CAAC,EAAG;MACvD,OAAOO,YAAY,CAAEL,EAAE,EAAEF,MAAM,EAAE,KAAM,CAAC;IACzC;IAEA,OAAOA,MAAM;EACd;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMO,YAAY,GAAGA,CAC3BO,SAAiB,EACjBT,GAAM,EACNU,MAAM,GAAG,IAAI,KACN;EACP,MAAMC,KAAK,GAAG,IAAAC,qBAAW,EAAEH,SAAS,EAAET,GAAG,EAAEV,aAAc,CAAC;EAC1D,IAAKqB,KAAK,IAAID,MAAM,EAAG;IACtBtB,UAAU,CAACyB,GAAG,CAAEF,KAAM,CAAC;EACxB;EACA,OAAOA,KAAK;AACb,CAAC;AAACG,OAAA,CAAAZ,YAAA,GAAAA,YAAA","ignoreList":[]}